{
  "consumes": [
    "application/json",
    "multipart/form-data"
  ],
  "produces": [
    "application/json"
  ],
  "swagger": "2.0",
  "info": {
    "description": "Documentation of infoblog API.\n\nSchemes:\nhttp\nhttps",
    "title": "infoblog.",
    "version": "1.0.0"
  },
  "basePath": "/",
  "paths": {
    "/auth/checkcode": {
      "post": {
        "tags": [
          "auth"
        ],
        "summary": "Проверка смс кода.",
        "operationId": "checkCodeRequest",
        "parameters": [
          {
            "name": "Body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/CheckCodeRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/checkCodeResponse"
          }
        }
      }
    },
    "/auth/code": {
      "post": {
        "tags": [
          "auth"
        ],
        "summary": "Отправка смс кода.",
        "operationId": "sendCodeRequest",
        "parameters": [
          {
            "name": "Body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/PhoneCodeRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/sendCodeResponse"
          }
        }
      }
    },
    "/auth/email/login": {
      "post": {
        "tags": [
          "auth"
        ],
        "summary": "Авторизация пользователя по емейл + пароль.",
        "operationId": "EmailLoginRequest",
        "parameters": [
          {
            "name": "Body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/EmailLoginRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/EmailLoginResponse"
          }
        }
      }
    },
    "/auth/email/registration": {
      "post": {
        "tags": [
          "auth"
        ],
        "summary": "Отправка ссылки активации на почту.",
        "operationId": "EmailActivationRequest",
        "parameters": [
          {
            "name": "Body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/EmailActivationRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/emailRegistrationResponse"
          }
        }
      }
    },
    "/auth/email/verification": {
      "post": {
        "tags": [
          "auth"
        ],
        "summary": "Подтверждение почты, авторизация.",
        "operationId": "EmailVerificationRequest",
        "parameters": [
          {
            "name": "Body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/EmailVerificationRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/EmailVerificationResponse"
          }
        }
      }
    },
    "/auth/oauth2/facebook/login": {
      "get": {
        "tags": [
          "auth"
        ],
        "summary": "Авторизация с помощью фэйсбук.",
        "operationId": "FacebookLoginRequest",
        "responses": {
          "200": {
            "$ref": "#/responses/FacebookLoginResponse"
          }
        }
      }
    },
    "/auth/oauth2/google/login": {
      "get": {
        "tags": [
          "auth"
        ],
        "summary": "Авторизация с помощью гугл.",
        "operationId": "GoogleLoginRequest",
        "responses": {
          "200": {
            "$ref": "#/responses/GoogleLoginResponse"
          }
        }
      }
    },
    "/auth/oauth2/state": {
      "post": {
        "tags": [
          "auth"
        ],
        "summary": "Авторизация с помощью state oauth2.",
        "operationId": "Oauth2StateRequest",
        "parameters": [
          {
            "name": "Body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/StateRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/OauthStateResponse"
          }
        }
      }
    },
    "/auth/token/refresh": {
      "post": {
        "tags": [
          "auth"
        ],
        "summary": "Обновление токена.",
        "operationId": "RefreshTokenRequest",
        "parameters": [
          {
            "name": "Body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/RefreshTokenRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/RefreshResponse"
          }
        }
      }
    },
    "/chat/message/send": {
      "post": {
        "security": [
          {
            "Bearer": [
              "[]"
            ]
          }
        ],
        "tags": [
          "chatMessage"
        ],
        "summary": "Signal.",
        "operationId": "chatMessageRequest",
        "parameters": [
          {
            "name": "Body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/SendMessage"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/chatMessageResponse"
          }
        }
      }
    },
    "/exist/email": {
      "post": {
        "tags": [
          "exist"
        ],
        "summary": "Проверка на существование почты.",
        "operationId": "existEmailRequest",
        "parameters": [
          {
            "name": "Body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/EmailRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/existEmailResponse"
          }
        }
      }
    },
    "/exist/nickname": {
      "post": {
        "tags": [
          "exist"
        ],
        "summary": "Проверка на существование никнейма.",
        "operationId": "existNicknameRequest",
        "parameters": [
          {
            "name": "Body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/NicknameRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/existNicknameResponse"
          }
        }
      }
    },
    "/expose/feed/recommends": {
      "post": {
        "tags": [
          "posts"
        ],
        "summary": "Получение ленты рекомендации.",
        "operationId": "publicFeedRequest",
        "parameters": [
          {
            "name": "Body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/LimitOffsetReq"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/publicFeedResponse"
          }
        }
      }
    },
    "/moderate/create": {
      "post": {
        "security": [
          {
            "Bearer": [
              "[]"
            ]
          }
        ],
        "tags": [
          "moderate"
        ],
        "summary": "Создание модерации.",
        "operationId": "moderateCreateRequest",
        "parameters": [
          {
            "name": "Body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/ModerateCreateReq"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/moderateCreateResponse"
          }
        }
      }
    },
    "/moderate/file/upload": {
      "post": {
        "security": [
          {
            "Bearer": [
              "[]"
            ]
          }
        ],
        "tags": [
          "moderate"
        ],
        "summary": "Загрузка файла модерации.",
        "operationId": "moderateFileUploadRequest",
        "parameters": [
          {
            "type": "file",
            "x-go-name": "File",
            "name": "file",
            "in": "formData"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/moderateFileUploadResponse"
          }
        }
      }
    },
    "/moderate/get": {
      "post": {
        "security": [
          {
            "Bearer": [
              "[]"
            ]
          }
        ],
        "tags": [
          "moderate"
        ],
        "summary": "Получение модерации по айди.",
        "operationId": "moderateGetRequest",
        "parameters": [
          {
            "name": "Body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/UUIDReq"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/moderateGetResponse"
          }
        }
      }
    },
    "/moderate/get/all": {
      "post": {
        "security": [
          {
            "Bearer": [
              "[]"
            ]
          }
        ],
        "tags": [
          "moderate"
        ],
        "summary": "Получение списка модерации.",
        "operationId": "moderateGetAllRequest",
        "parameters": [
          {
            "name": "Body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/LimitOffsetReq"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/moderateGetAllResponse"
          }
        }
      }
    },
    "/moderate/update": {
      "post": {
        "security": [
          {
            "Bearer": [
              "[]"
            ]
          }
        ],
        "tags": [
          "moderate"
        ],
        "summary": "Обновление статуса модерации.",
        "operationId": "moderateUpdateRequest",
        "parameters": [
          {
            "name": "Body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/ModerateUpdateStatusReq"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/moderateUpdateResponse"
          }
        }
      }
    },
    "/people/autocomplete": {
      "post": {
        "security": [
          {
            "Bearer": [
              "[]"
            ]
          }
        ],
        "tags": [
          "people"
        ],
        "summary": "Автозаполнение по никнейму.",
        "operationId": "peopleAutocompleteRequest",
        "parameters": [
          {
            "name": "Body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/UserNicknameRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/peopleAutocompleteResponse"
          }
        }
      }
    },
    "/people/get": {
      "post": {
        "security": [
          {
            "Bearer": [
              "[]"
            ]
          }
        ],
        "tags": [
          "people"
        ],
        "summary": "Получить пользователя по никнейму или айди.",
        "operationId": "peopleIDRequest",
        "parameters": [
          {
            "name": "Body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/UserIDNickRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/peopleIDResponse"
          }
        }
      }
    },
    "/people/list": {
      "get": {
        "security": [
          {
            "Bearer": [
              "[]"
            ]
          }
        ],
        "tags": [
          "people"
        ],
        "summary": "Лист пользователей.",
        "operationId": "userListRequest",
        "responses": {
          "200": {
            "$ref": "#/responses/userListResponse"
          }
        }
      }
    },
    "/people/list/recommends": {
      "post": {
        "security": [
          {
            "Bearer": [
              "[]"
            ]
          }
        ],
        "tags": [
          "people"
        ],
        "summary": "Лист пользователей.",
        "operationId": "userRecommendsRequest",
        "parameters": [
          {
            "name": "Body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/LimitOffsetReq"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/userRecommendsResponse"
          }
        }
      }
    },
    "/people/list/subscribers": {
      "post": {
        "security": [
          {
            "Bearer": [
              "[]"
            ]
          }
        ],
        "tags": [
          "people"
        ],
        "summary": "Лист пользователей.",
        "operationId": "userSubscribersRequest",
        "parameters": [
          {
            "name": "Body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/LimitOffsetReq"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/userSubscribersResponse"
          }
        }
      }
    },
    "/people/list/subscribes": {
      "post": {
        "security": [
          {
            "Bearer": [
              "[]"
            ]
          }
        ],
        "tags": [
          "people"
        ],
        "summary": "Лист пользователей.",
        "operationId": "userSubscribesRequest",
        "parameters": [
          {
            "name": "Body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/LimitOffsetReq"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/userSubscribesResponse"
          }
        }
      }
    },
    "/people/subscribe": {
      "post": {
        "security": [
          {
            "Bearer": [
              "[]"
            ]
          }
        ],
        "tags": [
          "people"
        ],
        "summary": "Подписаться на пользователя.",
        "operationId": "userSubscribeRequest",
        "parameters": [
          {
            "name": "Body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/UserIDRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/userSubscribeResponse"
          }
        }
      }
    },
    "/people/unsubscribe": {
      "post": {
        "security": [
          {
            "Bearer": [
              "[]"
            ]
          }
        ],
        "tags": [
          "people"
        ],
        "summary": "Отписаться от пользователя.",
        "operationId": "userUnsubscribeRequest",
        "parameters": [
          {
            "name": "Body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/UserIDRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/userUnsubscribeResponse"
          }
        }
      }
    },
    "/posts/comments/create": {
      "post": {
        "tags": [
          "posts"
        ],
        "summary": "Создание комментария к посту.",
        "operationId": "CommentCreateRequest",
        "parameters": [
          {
            "name": "Body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/CommentCreateReq"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/CommentCreateResponse"
          }
        }
      }
    },
    "/posts/comments/get": {
      "post": {
        "tags": [
          "posts"
        ],
        "summary": "Получение комментариев поста.",
        "operationId": "GetCommentsRequest",
        "parameters": [
          {
            "name": "Body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/UUIDReq"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/GetCommentsResponse"
          }
        }
      }
    },
    "/posts/create": {
      "post": {
        "security": [
          {
            "Bearer": [
              "[]"
            ]
          }
        ],
        "tags": [
          "posts"
        ],
        "summary": "Создание поста.",
        "operationId": "postsCreateRequest",
        "parameters": [
          {
            "name": "Body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/PostCreateReq"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/postsCreateResponse"
          }
        }
      }
    },
    "/posts/delete": {
      "post": {
        "security": [
          {
            "Bearer": [
              "[]"
            ]
          }
        ],
        "tags": [
          "posts"
        ],
        "summary": "Удаление поста по post_id.",
        "operationId": "postDeleteRequest",
        "parameters": [
          {
            "name": "Body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/UUIDReq"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/postDeleteResponse"
          }
        }
      }
    },
    "/posts/feed/my": {
      "post": {
        "security": [
          {
            "Bearer": [
              "[]"
            ]
          }
        ],
        "tags": [
          "posts"
        ],
        "summary": "Получение ленты своих постов.",
        "operationId": "postsFeedMyRequest",
        "parameters": [
          {
            "name": "Body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/LimitOffsetReq"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/postsFeedMyResponse"
          }
        }
      }
    },
    "/posts/feed/recent": {
      "post": {
        "security": [
          {
            "Bearer": [
              "[]"
            ]
          }
        ],
        "tags": [
          "posts"
        ],
        "summary": "Получение ленты последних постов.",
        "operationId": "postsFeedRequest",
        "parameters": [
          {
            "name": "FormData",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/LimitOffsetReq"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/postsFeedResponse"
          }
        }
      }
    },
    "/posts/feed/recommends": {
      "post": {
        "security": [
          {
            "Bearer": [
              "[]"
            ]
          }
        ],
        "tags": [
          "posts"
        ],
        "summary": "Получение ленты рекомендации.",
        "operationId": "postsFeedRecommendsRequest",
        "parameters": [
          {
            "name": "Body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/LimitOffsetReq"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/postsFeedRecommendsResponse"
          }
        }
      }
    },
    "/posts/feed/subscribed": {
      "post": {
        "security": [
          {
            "Bearer": [
              "[]"
            ]
          }
        ],
        "tags": [
          "posts"
        ],
        "summary": "Получение ленты своих подписок.",
        "operationId": "postsFeedSubscribedRequest",
        "parameters": [
          {
            "name": "Body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/LimitOffsetReq"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/postsFeedSubscribedResponse"
          }
        }
      }
    },
    "/posts/feed/user": {
      "post": {
        "security": [
          {
            "Bearer": [
              "[]"
            ]
          }
        ],
        "tags": [
          "posts"
        ],
        "summary": "Получение ленты постов пользователя.",
        "operationId": "postsFeedUserRequest",
        "parameters": [
          {
            "name": "Body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/PostsFeedUserReq"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/postsFeedUserResponse"
          }
        }
      }
    },
    "/posts/file/upload": {
      "post": {
        "security": [
          {
            "Bearer": [
              "[]"
            ]
          }
        ],
        "tags": [
          "posts"
        ],
        "summary": "Загрузка файла поста.",
        "operationId": "postFileUploadRequest",
        "parameters": [
          {
            "type": "file",
            "x-go-name": "File",
            "name": "file",
            "in": "formData"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/postFileUploadResponse"
          }
        }
      }
    },
    "/posts/get": {
      "post": {
        "security": [
          {
            "Bearer": [
              "[]"
            ]
          }
        ],
        "tags": [
          "posts"
        ],
        "summary": "Получение поста по post_id.",
        "operationId": "postGetRequest",
        "parameters": [
          {
            "name": "Body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/UUIDReq"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/postGetResponse"
          }
        }
      }
    },
    "/posts/like": {
      "post": {
        "security": [
          {
            "Bearer": [
              "[]"
            ]
          }
        ],
        "tags": [
          "posts"
        ],
        "summary": "Лайк поста.",
        "operationId": "postLikeRequest",
        "parameters": [
          {
            "name": "Body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/LikeReq"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/postLikeResponse"
          }
        }
      }
    },
    "/posts/update": {
      "post": {
        "security": [
          {
            "Bearer": [
              "[]"
            ]
          }
        ],
        "tags": [
          "posts"
        ],
        "summary": "Обновление данных поста по post_id.",
        "operationId": "postUpdateRequest",
        "parameters": [
          {
            "name": "Body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/PostUpdateReq"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/postUpdateResponse"
          }
        }
      }
    },
    "/profile/get": {
      "get": {
        "security": [
          {
            "Bearer": [
              "[]"
            ]
          }
        ],
        "tags": [
          "profile"
        ],
        "summary": "Получение профиля.",
        "operationId": "getProfileRequest",
        "responses": {
          "200": {
            "$ref": "#/responses/getProfileResponse"
          }
        }
      }
    },
    "/profile/set/password": {
      "post": {
        "security": [
          {
            "Bearer": [
              "[]"
            ]
          }
        ],
        "tags": [
          "profile"
        ],
        "summary": "Изменение пароля.",
        "operationId": "profileSetPassword",
        "parameters": [
          {
            "name": "Body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/SetPasswordReq"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/profileSetPasswordResponse"
          }
        }
      }
    },
    "/profile/update": {
      "post": {
        "security": [
          {
            "Bearer": [
              "[]"
            ]
          }
        ],
        "tags": [
          "profile"
        ],
        "summary": "Обновление профиля.",
        "operationId": "profileUpdateRequest",
        "parameters": [
          {
            "name": "Body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/ProfileUpdateReq"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/profileUpdateResponse"
          }
        }
      }
    },
    "/profile/upload/avatar": {
      "post": {
        "security": [
          {
            "Bearer": [
              "[]"
            ]
          }
        ],
        "tags": [
          "profile"
        ],
        "summary": "Загрузка аватарки пользователя.",
        "operationId": "avatarUploadRequest",
        "parameters": [
          {
            "type": "file",
            "x-go-name": "File",
            "name": "file",
            "in": "formData"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/avatarUploadResponse"
          }
        }
      }
    },
    "/recover/check/phone": {
      "post": {
        "security": [
          {
            "Bearer": [
              "[]"
            ]
          }
        ],
        "tags": [
          "recover"
        ],
        "summary": "Проверка кода смс при запросе восстановления пароля.",
        "operationId": "checkPhoneCodeRequest",
        "parameters": [
          {
            "name": "Body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/CheckPhoneCodeRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/checkPhoneCodeResponse"
          }
        }
      }
    },
    "/recover/password": {
      "post": {
        "security": [
          {
            "Bearer": [
              "[]"
            ]
          }
        ],
        "tags": [
          "recover"
        ],
        "summary": "Запрос на восстановление пароля по почте или телефону.",
        "operationId": "recoverPasswordRequest",
        "parameters": [
          {
            "name": "Body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/PasswordRecoverRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/recoverPasswordResponse"
          }
        }
      }
    },
    "/recover/set/password": {
      "post": {
        "security": [
          {
            "Bearer": [
              "[]"
            ]
          }
        ],
        "tags": [
          "recover"
        ],
        "summary": "Установка пароля по recover_id, указывается в редиректе с почты /profile/password/{hash}, либо при проверке смс кода.",
        "operationId": "passwordResetRequest",
        "parameters": [
          {
            "name": "Body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/PasswordResetRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/passwordResetResponse"
          }
        }
      }
    },
    "/restricted/signal": {
      "post": {
        "security": [
          {
            "Bearer": [
              "[]"
            ]
          }
        ],
        "tags": [
          "signal"
        ],
        "summary": "Signal.",
        "operationId": "signalRequest",
        "parameters": [
          {
            "name": "Body",
            "in": "body",
            "schema": {
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/signalResponse"
          }
        }
      }
    },
    "/system/config": {
      "get": {
        "security": [
          {
            "Bearer": [
              "[]"
            ]
          }
        ],
        "tags": [
          "system"
        ],
        "summary": "Получение конфигурации сервера.",
        "operationId": "systemGetConfig",
        "responses": {
          "200": {
            "$ref": "#/responses/systemGetConfig"
          }
        }
      }
    }
  },
  "definitions": {
    "App": {
      "type": "object",
      "properties": {
        "Dev": {
          "type": "boolean"
        },
        "FrontEnd": {
          "type": "string"
        }
      },
      "x-go-package": "gitlab.com/InfoBlogFriends/server/config"
    },
    "AuthTokenData": {
      "type": "object",
      "properties": {
        "access_token": {
          "type": "string",
          "x-go-name": "AccessToken"
        },
        "refresh_token": {
          "type": "string",
          "x-go-name": "RefreshToken"
        },
        "user": {
          "$ref": "#/definitions/UserData"
        }
      },
      "x-go-package": "gitlab.com/InfoBlogFriends/server/request"
    },
    "AuthTokenResponse": {
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/definitions/AuthTokenData"
        },
        "msg": {
          "type": "string",
          "x-go-name": "Msg"
        },
        "success": {
          "type": "boolean",
          "x-go-name": "Success"
        }
      },
      "x-go-package": "gitlab.com/InfoBlogFriends/server/request"
    },
    "CheckCodeRequest": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int64",
          "x-go-name": "Code"
        },
        "phone": {
          "type": "string",
          "x-go-name": "Phone"
        }
      },
      "x-go-package": "gitlab.com/InfoBlogFriends/server/request"
    },
    "CheckPhoneCodeRequest": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int64",
          "x-go-name": "Code"
        },
        "phone": {
          "type": "string",
          "x-go-name": "Phone"
        }
      },
      "x-go-package": "gitlab.com/InfoBlogFriends/server/request"
    },
    "CommentCreateReq": {
      "type": "object",
      "properties": {
        "body": {
          "type": "string",
          "x-go-name": "Body"
        },
        "post_id": {
          "type": "string",
          "x-go-name": "ForeignUUID"
        }
      },
      "x-go-package": "gitlab.com/InfoBlogFriends/server/request"
    },
    "Config": {
      "type": "object",
      "properties": {
        "App": {
          "$ref": "#/definitions/App"
        },
        "DB": {
          "$ref": "#/definitions/DB"
        },
        "Email": {
          "$ref": "#/definitions/Email"
        },
        "Facebook": {
          "$ref": "#/definitions/Config"
        },
        "Google": {
          "$ref": "#/definitions/Config"
        },
        "Redis": {
          "$ref": "#/definitions/Redis"
        },
        "SMSC": {
          "$ref": "#/definitions/SMSC"
        },
        "Server": {
          "$ref": "#/definitions/Server"
        }
      },
      "x-go-package": "gitlab.com/InfoBlogFriends/server/config"
    },
    "DB": {
      "type": "object",
      "properties": {
        "DBName": {
          "type": "string"
        },
        "Driver": {
          "type": "string"
        },
        "Host": {
          "type": "string"
        },
        "Net": {
          "type": "string"
        },
        "Port": {
          "type": "string"
        },
        "Timeout": {
          "type": "integer",
          "format": "int64"
        }
      },
      "x-go-package": "gitlab.com/InfoBlogFriends/server/config"
    },
    "Email": {
      "type": "object",
      "properties": {
        "From": {
          "type": "string"
        },
        "Port": {
          "type": "string"
        },
        "ServerAddress": {
          "type": "string"
        }
      },
      "x-go-package": "gitlab.com/InfoBlogFriends/server/config"
    },
    "EmailActivationRequest": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string",
          "x-go-name": "Email"
        },
        "password": {
          "type": "string",
          "x-go-name": "Password"
        }
      },
      "x-go-package": "gitlab.com/InfoBlogFriends/server/request"
    },
    "EmailLoginRequest": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string",
          "x-go-name": "Email"
        },
        "password": {
          "type": "string",
          "x-go-name": "Password"
        }
      },
      "x-go-package": "gitlab.com/InfoBlogFriends/server/request"
    },
    "EmailRequest": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string",
          "x-go-name": "Email"
        }
      },
      "x-go-package": "gitlab.com/InfoBlogFriends/server/request"
    },
    "EmailVerificationRequest": {
      "type": "object",
      "properties": {
        "activation_id": {
          "type": "string",
          "x-go-name": "ActivationID"
        }
      },
      "x-go-package": "gitlab.com/InfoBlogFriends/server/request"
    },
    "FileData": {
      "type": "object",
      "properties": {
        "dir": {
          "type": "string",
          "x-go-name": "Dir"
        },
        "file_id": {
          "type": "string",
          "x-go-name": "UUID"
        },
        "foreign_uuid": {
          "$ref": "#/definitions/NullUUID"
        },
        "link": {
          "type": "string",
          "x-go-name": "Link"
        },
        "name": {
          "type": "string",
          "x-go-name": "Name"
        },
        "private": {
          "$ref": "#/definitions/NullBool"
        }
      },
      "x-go-package": "gitlab.com/InfoBlogFriends/server/request"
    },
    "LikeReq": {
      "type": "object",
      "properties": {
        "active": {
          "type": "boolean",
          "x-go-name": "Active"
        },
        "post_id": {
          "type": "string",
          "x-go-name": "UUID"
        }
      },
      "x-go-package": "gitlab.com/InfoBlogFriends/server/request"
    },
    "LimitOffsetReq": {
      "type": "object",
      "properties": {
        "limit": {
          "type": "integer",
          "format": "int64",
          "x-go-name": "Limit"
        },
        "offset": {
          "type": "integer",
          "format": "int64",
          "x-go-name": "Offset"
        }
      },
      "x-go-package": "gitlab.com/InfoBlogFriends/server/request"
    },
    "ModerateCreateReq": {
      "type": "object",
      "properties": {
        "files_id": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-go-name": "FilesID"
        }
      },
      "x-go-package": "gitlab.com/InfoBlogFriends/server/request"
    },
    "ModerateUpdateStatusReq": {
      "type": "object",
      "properties": {
        "Reason": {
          "type": "string"
        },
        "Status": {
          "type": "integer",
          "format": "int64"
        },
        "moderate_id": {
          "type": "string",
          "x-go-name": "UUID"
        }
      },
      "x-go-package": "gitlab.com/InfoBlogFriends/server/request"
    },
    "NicknameRequest": {
      "type": "object",
      "properties": {
        "nickname": {
          "type": "string",
          "x-go-name": "Nickname"
        }
      },
      "x-go-package": "gitlab.com/InfoBlogFriends/server/request"
    },
    "NullBool": {
      "type": "object",
      "properties": {
        "Bool": {
          "type": "boolean"
        },
        "Valid": {
          "type": "boolean"
        }
      },
      "x-go-package": "gitlab.com/InfoBlogFriends/server/types"
    },
    "NullFloat64": {
      "type": "object",
      "properties": {
        "Float64": {
          "type": "number",
          "format": "double"
        },
        "Valid": {
          "type": "boolean"
        }
      },
      "x-go-package": "gitlab.com/InfoBlogFriends/server/types"
    },
    "NullString": {
      "description": "NullString is a wrapper around sql.NullString",
      "type": "object",
      "properties": {
        "String": {
          "type": "string"
        },
        "Valid": {
          "type": "boolean"
        }
      },
      "x-go-package": "gitlab.com/InfoBlogFriends/server/types"
    },
    "NullUUID": {
      "type": "object",
      "properties": {
        "Binary": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "uint8"
          }
        },
        "String": {
          "type": "string"
        },
        "Valid": {
          "type": "boolean"
        }
      },
      "x-go-package": "gitlab.com/InfoBlogFriends/server/types"
    },
    "NullUint64": {
      "type": "object",
      "properties": {
        "Uint64": {
          "type": "integer",
          "format": "uint64"
        },
        "Valid": {
          "type": "boolean"
        }
      },
      "x-go-package": "gitlab.com/InfoBlogFriends/server/types"
    },
    "PasswordRecoverRequest": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string",
          "x-go-name": "Email"
        },
        "phone": {
          "type": "string",
          "x-go-name": "Phone"
        }
      },
      "x-go-package": "gitlab.com/InfoBlogFriends/server/request"
    },
    "PasswordResetRequest": {
      "type": "object",
      "properties": {
        "password": {
          "type": "string",
          "x-go-name": "Password"
        },
        "recover_id": {
          "type": "string",
          "x-go-name": "RecoverID"
        }
      },
      "x-go-package": "gitlab.com/InfoBlogFriends/server/request"
    },
    "PhoneCodeRequest": {
      "type": "object",
      "properties": {
        "phone": {
          "type": "string",
          "x-go-name": "Phone"
        }
      },
      "x-go-package": "gitlab.com/InfoBlogFriends/server/request"
    },
    "PostCountData": {
      "type": "object",
      "properties": {
        "comments": {
          "type": "integer",
          "format": "int64",
          "x-go-name": "Comments"
        },
        "likes": {
          "type": "integer",
          "format": "int64",
          "x-go-name": "Likes"
        }
      },
      "x-go-package": "gitlab.com/InfoBlogFriends/server/request"
    },
    "PostCreateReq": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string",
          "x-go-name": "Description"
        },
        "files_id": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-go-name": "FilesID"
        },
        "post_type": {
          "type": "integer",
          "format": "int64",
          "x-go-name": "PostType"
        },
        "price": {
          "type": "number",
          "format": "double",
          "x-go-name": "Price"
        }
      },
      "x-go-package": "gitlab.com/InfoBlogFriends/server/request"
    },
    "PostDataResponse": {
      "type": "object",
      "properties": {
        "counts": {
          "$ref": "#/definitions/PostCountData"
        },
        "description": {
          "type": "string",
          "x-go-name": "Body"
        },
        "files": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FileData"
          },
          "x-go-name": "Files"
        },
        "is_liked": {
          "type": "boolean",
          "x-go-name": "IsLiked"
        },
        "is_open": {
          "type": "boolean",
          "x-go-name": "IsOpen"
        },
        "likes_count": {
          "$ref": "#/definitions/NullUint64"
        },
        "post_id": {
          "$ref": "#/definitions/NullUUID"
        },
        "post_type": {
          "type": "integer",
          "format": "int64",
          "x-go-name": "Type"
        },
        "price": {
          "type": "number",
          "format": "double",
          "x-go-name": "Price"
        },
        "user": {
          "$ref": "#/definitions/UserData"
        },
        "user_id": {
          "$ref": "#/definitions/NullUUID"
        },
        "views_count": {
          "$ref": "#/definitions/NullUint64"
        }
      },
      "x-go-package": "gitlab.com/InfoBlogFriends/server/request"
    },
    "PostUpdateReq": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string",
          "x-go-name": "Body"
        },
        "post_id": {
          "type": "string",
          "x-go-name": "UUID"
        },
        "price": {
          "type": "number",
          "format": "double",
          "x-go-name": "Price"
        }
      },
      "x-go-package": "gitlab.com/InfoBlogFriends/server/request"
    },
    "PostsFeedData": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "format": "uint64",
          "x-go-name": "Count"
        },
        "posts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PostDataResponse"
          },
          "x-go-name": "Posts"
        }
      },
      "x-go-package": "gitlab.com/InfoBlogFriends/server/request"
    },
    "PostsFeedResponse": {
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/definitions/PostsFeedData"
        },
        "msg": {
          "type": "string",
          "x-go-name": "Msg"
        },
        "success": {
          "type": "boolean",
          "x-go-name": "Success"
        }
      },
      "x-go-package": "gitlab.com/InfoBlogFriends/server/request"
    },
    "PostsFeedUserReq": {
      "type": "object",
      "properties": {
        "limit": {
          "type": "integer",
          "format": "int64",
          "x-go-name": "Limit"
        },
        "offset": {
          "type": "integer",
          "format": "int64",
          "x-go-name": "Offset"
        },
        "user_id": {
          "type": "string",
          "x-go-name": "UUID"
        }
      },
      "x-go-package": "gitlab.com/InfoBlogFriends/server/request"
    },
    "ProfileUpdateReq": {
      "type": "object",
      "properties": {
        "cost": {
          "type": "number",
          "format": "double",
          "x-go-name": "Cost"
        },
        "description": {
          "type": "string",
          "x-go-name": "Description"
        },
        "email": {
          "type": "string",
          "x-go-name": "Email"
        },
        "language": {
          "type": "integer",
          "format": "int64",
          "x-go-name": "Language"
        },
        "name": {
          "type": "string",
          "x-go-name": "Name"
        },
        "nickname": {
          "type": "string",
          "x-go-name": "NickName"
        },
        "notify_email": {
          "type": "boolean",
          "x-go-name": "NotifyEmail"
        },
        "notify_push": {
          "type": "boolean",
          "x-go-name": "NotifyPush"
        },
        "notify_telegram": {
          "type": "boolean",
          "x-go-name": "NotifyTelegram"
        },
        "phone": {
          "type": "string",
          "x-go-name": "Phone"
        },
        "second_name": {
          "type": "string",
          "x-go-name": "SecondName"
        },
        "show_subs": {
          "type": "boolean",
          "x-go-name": "ShowSubs"
        },
        "trial": {
          "type": "boolean",
          "x-go-name": "Trial"
        }
      },
      "x-go-package": "gitlab.com/InfoBlogFriends/server/request"
    },
    "Redis": {
      "type": "object",
      "properties": {
        "Host": {
          "type": "string"
        },
        "Port": {
          "type": "integer",
          "format": "int64"
        }
      },
      "x-go-package": "gitlab.com/InfoBlogFriends/server/config"
    },
    "RefreshTokenRequest": {
      "type": "object",
      "properties": {
        "refresh_token": {
          "type": "string",
          "x-go-name": "RefreshToken"
        }
      },
      "x-go-package": "gitlab.com/InfoBlogFriends/server/request"
    },
    "Response": {
      "description": "go:generate easytags $GOFILE",
      "type": "object",
      "properties": {
        "data": {
          "type": "object",
          "x-go-name": "Data"
        },
        "msg": {
          "type": "string",
          "x-go-name": "Msg"
        },
        "success": {
          "type": "boolean",
          "x-go-name": "Success"
        }
      },
      "x-go-package": "gitlab.com/InfoBlogFriends/server/request"
    },
    "SMSC": {
      "type": "object",
      "properties": {
        "Cost": {
          "type": "string"
        },
        "Dev": {
          "type": "boolean"
        },
        "Fmt": {
          "type": "string"
        }
      },
      "x-go-package": "gitlab.com/InfoBlogFriends/server/config"
    },
    "SendMessage": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string",
          "x-go-name": "Message"
        },
        "to_uuid": {
          "type": "string",
          "x-go-name": "ToUUID"
        }
      },
      "x-go-package": "gitlab.com/InfoBlogFriends/server/request"
    },
    "Server": {
      "type": "object",
      "properties": {
        "Port": {
          "type": "integer",
          "format": "int64"
        }
      },
      "x-go-package": "gitlab.com/InfoBlogFriends/server/config"
    },
    "SetPasswordReq": {
      "type": "object",
      "properties": {
        "old_password": {
          "type": "string",
          "x-go-name": "OldPassword"
        },
        "password": {
          "type": "string",
          "x-go-name": "Password"
        }
      },
      "x-go-package": "gitlab.com/InfoBlogFriends/server/request"
    },
    "StateRequest": {
      "type": "object",
      "properties": {
        "state": {
          "type": "string",
          "x-go-name": "State"
        }
      },
      "x-go-package": "gitlab.com/InfoBlogFriends/server/request"
    },
    "UUIDReq": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "x-go-name": "UUID"
        }
      },
      "x-go-package": "gitlab.com/InfoBlogFriends/server/request"
    },
    "UserData": {
      "type": "object",
      "properties": {
        "active": {
          "$ref": "#/definitions/NullBool"
        },
        "cost": {
          "$ref": "#/definitions/NullFloat64"
        },
        "counts": {
          "$ref": "#/definitions/UserDataCounts"
        },
        "created_at": {
          "type": "string",
          "format": "date-time",
          "x-go-name": "CreatedAt"
        },
        "description": {
          "$ref": "#/definitions/NullString"
        },
        "email": {
          "$ref": "#/definitions/NullString"
        },
        "email_verified": {
          "$ref": "#/definitions/NullBool"
        },
        "in_subscribes": {
          "type": "boolean",
          "x-go-name": "InSubscribes"
        },
        "language": {
          "type": "integer",
          "format": "int64",
          "x-go-name": "Language"
        },
        "likes_count": {
          "$ref": "#/definitions/NullUint64"
        },
        "name": {
          "$ref": "#/definitions/NullString"
        },
        "nickname": {
          "$ref": "#/definitions/NullString"
        },
        "notify_email": {
          "$ref": "#/definitions/NullBool"
        },
        "notify_push": {
          "$ref": "#/definitions/NullBool"
        },
        "notify_telegram": {
          "$ref": "#/definitions/NullBool"
        },
        "password_set": {
          "type": "boolean",
          "x-go-name": "PasswordSet"
        },
        "phone": {
          "$ref": "#/definitions/NullString"
        },
        "profile_image": {
          "$ref": "#/definitions/NullString"
        },
        "profile_image_set": {
          "type": "boolean",
          "x-go-name": "AvatarSet"
        },
        "second_name": {
          "$ref": "#/definitions/NullString"
        },
        "show_subs": {
          "$ref": "#/definitions/NullBool"
        },
        "subscribers_count": {
          "$ref": "#/definitions/NullUint64"
        },
        "subscribes_count": {
          "$ref": "#/definitions/NullUint64"
        },
        "trial": {
          "$ref": "#/definitions/NullBool"
        },
        "updated_at": {
          "type": "string",
          "format": "date-time",
          "x-go-name": "UpdatedAt"
        },
        "user_id": {
          "$ref": "#/definitions/NullUUID"
        }
      },
      "x-go-package": "gitlab.com/InfoBlogFriends/server/request"
    },
    "UserDataCounts": {
      "type": "object",
      "properties": {
        "friends": {
          "type": "integer",
          "format": "int64",
          "x-go-name": "Friends"
        },
        "likes": {
          "type": "integer",
          "format": "int64",
          "x-go-name": "Likes"
        },
        "posts": {
          "type": "integer",
          "format": "int64",
          "x-go-name": "Posts"
        },
        "subscribers": {
          "type": "integer",
          "format": "int64",
          "x-go-name": "Subscribers"
        }
      },
      "x-go-package": "gitlab.com/InfoBlogFriends/server/request"
    },
    "UserIDNickRequest": {
      "type": "object",
      "properties": {
        "nickname": {
          "type": "string",
          "x-go-name": "NickName"
        },
        "user_id": {
          "type": "string",
          "x-go-name": "UUID"
        }
      },
      "x-go-package": "gitlab.com/InfoBlogFriends/server/request"
    },
    "UserIDRequest": {
      "type": "object",
      "properties": {
        "uuid": {
          "type": "string",
          "x-go-name": "UUID"
        }
      },
      "x-go-package": "gitlab.com/InfoBlogFriends/server/request"
    },
    "UserNicknameRequest": {
      "type": "object",
      "properties": {
        "nickname": {
          "type": "string",
          "x-go-name": "Nickname"
        }
      },
      "x-go-package": "gitlab.com/InfoBlogFriends/server/request"
    }
  },
  "responses": {
    "CommentCreateResponse": {
      "description": "",
      "schema": {
        "$ref": "#/definitions/Response"
      }
    },
    "EmailLoginResponse": {
      "description": "",
      "schema": {
        "$ref": "#/definitions/AuthTokenResponse"
      }
    },
    "EmailVerificationResponse": {
      "description": "",
      "schema": {
        "$ref": "#/definitions/AuthTokenResponse"
      }
    },
    "FacebookLoginResponse": {
      "description": "",
      "schema": {
        "$ref": "#/definitions/Response"
      }
    },
    "GetCommentsResponse": {
      "description": "",
      "schema": {
        "$ref": "#/definitions/Response"
      }
    },
    "GoogleLoginResponse": {
      "description": "",
      "schema": {
        "$ref": "#/definitions/Response"
      }
    },
    "OauthStateResponse": {
      "description": "",
      "schema": {
        "$ref": "#/definitions/AuthTokenResponse"
      }
    },
    "RefreshResponse": {
      "description": "",
      "schema": {
        "$ref": "#/definitions/AuthTokenResponse"
      }
    },
    "avatarUploadResponse": {
      "description": "",
      "schema": {
        "$ref": "#/definitions/Response"
      }
    },
    "chatMessageResponse": {
      "description": "",
      "schema": {
        "$ref": "#/definitions/Response"
      }
    },
    "checkCodeResponse": {
      "description": "",
      "schema": {
        "$ref": "#/definitions/AuthTokenData"
      }
    },
    "checkPhoneCodeResponse": {
      "description": "",
      "schema": {
        "$ref": "#/definitions/Response"
      }
    },
    "emailRegistrationResponse": {
      "description": "",
      "schema": {
        "$ref": "#/definitions/Response"
      }
    },
    "existEmailResponse": {
      "description": "",
      "schema": {
        "$ref": "#/definitions/Response"
      }
    },
    "existNicknameResponse": {
      "description": "",
      "schema": {
        "$ref": "#/definitions/Response"
      }
    },
    "getProfileResponse": {
      "description": "",
      "schema": {
        "$ref": "#/definitions/Response"
      }
    },
    "moderateCreateResponse": {
      "description": "",
      "schema": {
        "$ref": "#/definitions/Response"
      }
    },
    "moderateFileUploadResponse": {
      "description": "",
      "schema": {
        "$ref": "#/definitions/Response"
      }
    },
    "moderateGetAllResponse": {
      "description": "",
      "schema": {
        "$ref": "#/definitions/Response"
      }
    },
    "moderateGetResponse": {
      "description": "",
      "schema": {
        "$ref": "#/definitions/Response"
      }
    },
    "moderateUpdateResponse": {
      "description": "",
      "schema": {
        "$ref": "#/definitions/Response"
      }
    },
    "passwordResetResponse": {
      "description": "",
      "schema": {
        "$ref": "#/definitions/Response"
      }
    },
    "peopleAutocompleteResponse": {
      "description": "",
      "schema": {
        "$ref": "#/definitions/Response"
      }
    },
    "peopleIDResponse": {
      "description": "",
      "schema": {
        "$ref": "#/definitions/Response"
      }
    },
    "postDeleteResponse": {
      "description": "",
      "schema": {
        "$ref": "#/definitions/Response"
      }
    },
    "postFileUploadResponse": {
      "description": "",
      "schema": {
        "$ref": "#/definitions/Response"
      }
    },
    "postGetResponse": {
      "description": "",
      "schema": {
        "$ref": "#/definitions/Response"
      }
    },
    "postLikeResponse": {
      "description": "",
      "schema": {
        "$ref": "#/definitions/Response"
      }
    },
    "postUpdateResponse": {
      "description": "",
      "schema": {
        "$ref": "#/definitions/Response"
      }
    },
    "postsCreateResponse": {
      "description": "",
      "schema": {
        "$ref": "#/definitions/PostDataResponse"
      }
    },
    "postsFeedMyResponse": {
      "description": "",
      "schema": {
        "$ref": "#/definitions/PostsFeedResponse"
      }
    },
    "postsFeedRecommendsResponse": {
      "description": "",
      "schema": {
        "$ref": "#/definitions/PostsFeedResponse"
      }
    },
    "postsFeedResponse": {
      "description": "",
      "schema": {
        "$ref": "#/definitions/PostsFeedResponse"
      }
    },
    "postsFeedSubscribedResponse": {
      "description": "",
      "schema": {
        "$ref": "#/definitions/PostsFeedResponse"
      }
    },
    "postsFeedUserResponse": {
      "description": "",
      "schema": {
        "$ref": "#/definitions/PostsFeedResponse"
      }
    },
    "profileSetPasswordResponse": {
      "description": "",
      "schema": {
        "$ref": "#/definitions/Response"
      }
    },
    "profileUpdateResponse": {
      "description": "",
      "schema": {
        "$ref": "#/definitions/Response"
      }
    },
    "publicFeedResponse": {
      "description": "",
      "schema": {
        "$ref": "#/definitions/PostsFeedResponse"
      }
    },
    "recoverPasswordResponse": {
      "description": "",
      "schema": {
        "$ref": "#/definitions/Response"
      }
    },
    "sendCodeResponse": {
      "description": "",
      "schema": {
        "$ref": "#/definitions/Response"
      }
    },
    "signalResponse": {
      "description": "",
      "schema": {
        "$ref": "#/definitions/Response"
      }
    },
    "systemGetConfig": {
      "description": "",
      "schema": {
        "$ref": "#/definitions/Config"
      }
    },
    "userListResponse": {
      "description": "",
      "schema": {
        "$ref": "#/definitions/Response"
      }
    },
    "userRecommendsResponse": {
      "description": "",
      "schema": {
        "$ref": "#/definitions/Response"
      }
    },
    "userSubscribeResponse": {
      "description": "",
      "schema": {
        "$ref": "#/definitions/Response"
      }
    },
    "userSubscribersResponse": {
      "description": "",
      "schema": {
        "$ref": "#/definitions/Response"
      }
    },
    "userSubscribesResponse": {
      "description": "",
      "schema": {
        "$ref": "#/definitions/Response"
      }
    },
    "userUnsubscribeResponse": {
      "description": "",
      "schema": {
        "$ref": "#/definitions/Response"
      }
    }
  },
  "securityDefinitions": {
    "Bearer": {
      "type": "apiKey",
      "name": "Authorization",
      "in": "header"
    }
  }
}